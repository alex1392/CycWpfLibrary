<fcc:FluentWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:local="clr-namespace:NugetTester"
                  xmlns:fcc="clr-namespace:CycWpfLibrary.FluentCustomControls;assembly=CycWpfLibrary.FluentCustomControls"
                  xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
                  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                  xmlns:Animations="clr-namespace:SourceChord.FluentWPF.Animations;assembly=FluentWPF"
                  xmlns:System="clr-namespace:System;assembly=mscorlib"
                  x:Class="NugetTester.MainWindow"
                  fw:AcrylicWindow.Enabled="True"
                  fw:AcrylicWindow.ShowTitleBar="False"
                  mc:Ignorable="d"
                  Title="MainWindow"
                  Height="450"
                  Width="800">
  <fcc:FluentWindow.Resources>
    <DataTemplate x:Key="RestoreWhite">
      <Grid UseLayoutRounding="True">
        <Path Data="M1,3 L1,11 L9,11 L9,3 z M3,1 L3,2 L10,2 L10,9 L11,9 L11,1 z M2 ,0 L12,0 L12,10 L10,10 L10,12 L0,12 L0,2 L2 ,2 z"
              Width="12"
              Height="12"
              UseLayoutRounding="True"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              Fill="White" />
      </Grid>
    </DataTemplate>
    <DataTemplate x:Key="CloseWhite">
      <Grid UseLayoutRounding="True">
        <Path Data="M1,0 L6,5 L11,0 L12,1 L7,6 L12,11 L11,12 L6,7 L1,12 L0,11 L5,6 L0,1 z"
              Width="12"
              Height="12"
              UseLayoutRounding="True"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              Fill="White" />
      </Grid>
    </DataTemplate>
    <DataTemplate x:Key="MaximizeWhite">
      <Grid>
        <Path Data="M1,1  L1 ,11 L11,11 L11,1 z M0,0 L12,0 L12,12 L0,12 z"
              Width="12"
              Height="12"
              UseLayoutRounding="True"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              Fill="White" />
      </Grid>
    </DataTemplate>
    <DataTemplate x:Key="MinimizeWhite">
      <Grid>
        <Path Data="M0,5 L12,5 L12,6 L0,6 z"
              Width="12"
              Height="12"
              UseLayoutRounding="True"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              Fill="White" />
      </Grid>
    </DataTemplate>
    <Style x:Key="TitleBarButtonFocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2"
                       SnapsToDevicePixels="True"
                       Stroke="Transparent"
                       StrokeDashArray="1 2"
                       StrokeThickness="1" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="TitleBarButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ButtonRevealStyle}">
      <Setter Property="Focusable"
              Value="False" />
      <Setter Property="Background"
              Value="Transparent" />
      <Setter Property="Width"
              Value="36" />
      <Setter Property="HorizontalContentAlignment"
              Value="Center" />
      <Setter Property="VerticalContentAlignment"
              Value="Center" />

    </Style>
    <Style x:Key="ButtonStyle1"
           TargetType="{x:Type Button}">
      <Setter Property="OverridesDefaultStyle"
              Value="True" />
      <Setter Property="Foreground"
              Value="Black" />
      <Setter Property="Background"
              Value="#80808080" />
      <Setter Property="BorderThickness"
              Value="2" />
      <Setter Property="HorizontalContentAlignment"
              Value="Center" />
      <Setter Property="VerticalContentAlignment"
              Value="Center" />
      <Setter Property="SnapsToDevicePixels"
              Value="True" />
      <Setter Property="UseLayoutRounding"
              Value="True" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Grid x:Name="root"
                  Background="{TemplateBinding Background}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal">
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.6"
                                       To="0"
                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                       Storyboard.TargetName="backgroundBorder">
                        <DoubleAnimation.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.6"
                                       To="0.5"
                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                       Storyboard.TargetName="backgroundBorder">
                        <DoubleAnimation.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.6"
                                       To="0.5"
                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                       Storyboard.TargetName="backgroundBorder">
                        <DoubleAnimation.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation Duration="0:0:0.1"
                                       To="0"
                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                       Storyboard.TargetName="hoverLight">
                        <DoubleAnimation.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation Duration="0:0:0.1"
                                       To="1"
                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                       Storyboard.TargetName="pressLight">
                        <DoubleAnimation.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation Duration="0:0:0.3"
                                       From="100"
                                       To="50"
                                       Storyboard.TargetProperty="(RadialGradientBrush.RadiusX)"
                                       Storyboard.TargetName="brush">
                        <DoubleAnimation.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation BeginTime="0:0:0.5"
                                       Duration="0:0:4"
                                       To="500"
                                       Storyboard.TargetProperty="(RadialGradientBrush.RadiusX)"
                                       Storyboard.TargetName="brush">
                        <DoubleAnimation.EasingFunction>
                          <SineEase EasingMode="EaseInOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation Duration="0:0:0.3"
                                       From="100"
                                       To="50"
                                       Storyboard.TargetProperty="(RadialGradientBrush.RadiusY)"
                                       Storyboard.TargetName="brush">
                        <DoubleAnimation.EasingFunction>
                          <CubicEase EasingMode="EaseOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation BeginTime="0:0:0.5"
                                       Duration="0:0:4"
                                       To="500"
                                       Storyboard.TargetProperty="(RadialGradientBrush.RadiusY)"
                                       Storyboard.TargetName="brush">
                        <DoubleAnimation.EasingFunction>
                          <SineEase EasingMode="EaseInOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                      <DoubleAnimation BeginTime="0:0:0.5"
                                       Duration="0:0:4"
                                       To="0"
                                       Storyboard.TargetProperty="Opacity"
                                       Storyboard.TargetName="brush">
                        <DoubleAnimation.EasingFunction>
                          <SineEase EasingMode="EaseInOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <Animations:BrushAnimation AutoReverse="False"
                                                 Duration="0:0:0.1"
                                                 To="#FF838383"
                                                 Storyboard.TargetProperty="(TextElement.Foreground)"
                                                 Storyboard.TargetName="contentPresenter">
                        <Animations:BrushAnimation.EasingFunction>
                          <SineEase EasingMode="EaseInOut" />
                        </Animations:BrushAnimation.EasingFunction>
                      </Animations:BrushAnimation>
                      <DoubleAnimation AutoReverse="False"
                                       Duration="0:0:0.1"
                                       To="0"
                                       Storyboard.TargetProperty="Opacity"
                                       Storyboard.TargetName="border">
                        <DoubleAnimation.EasingFunction>
                          <SineEase EasingMode="EaseInOut" />
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="backgroundBorder"
                      Opacity="0">
                <Grid ClipToBounds="True">
                  <Border x:Name="hoverLight">
                    <Border.Background>
                      <RadialGradientBrush MappingMode="Absolute"
                                           RadiusY="200"
                                           RadiusX="200">
                        <RadialGradientBrush.Center>
                          <MultiBinding UpdateSourceTrigger="Default">
                            <MultiBinding.Converter>
                              <fw:RelativePositionConverter />
                            </MultiBinding.Converter>
                            <Binding Path="(fw:PointerTracker.RootObject)" />
                            <Binding />
                            <Binding Path="(fw:PointerTracker.Position)" />
                          </MultiBinding>
                        </RadialGradientBrush.Center>
                        <RadialGradientBrush.GradientOrigin>
                          <MultiBinding UpdateSourceTrigger="Default">
                            <MultiBinding.Converter>
                              <fw:RelativePositionConverter />
                            </MultiBinding.Converter>
                            <Binding Path="(fw:PointerTracker.RootObject)" />
                            <Binding />
                            <Binding Path="(fw:PointerTracker.Position)" />
                          </MultiBinding>
                        </RadialGradientBrush.GradientOrigin>
                        <RadialGradientBrush.Opacity>
                          <Binding Path="(fw:PointerTracker.IsEnter)">
                            <Binding.ConverterParameter>
                              <System:Double>0.6</System:Double>
                            </Binding.ConverterParameter>
                            <Binding.Converter>
                              <fw:OpacityConverter />
                            </Binding.Converter>
                          </Binding>
                        </RadialGradientBrush.Opacity>
                        <GradientStop Color="White"
                                      Offset="0" />
                        <GradientStop Color="Transparent"
                                      Offset="1" />
                      </RadialGradientBrush>
                    </Border.Background>
                  </Border>
                  <Rectangle x:Name="pressLight"
                             Opacity="0">
                    <Rectangle.Fill>
                      <RadialGradientBrush MappingMode="Absolute"
                                           RadiusY="5"
                                           RadiusX="5">
                        <RadialGradientBrush.Center>
                          <MultiBinding UpdateSourceTrigger="Default">
                            <MultiBinding.Converter>
                              <fw:RelativePositionConverter />
                            </MultiBinding.Converter>
                            <Binding Path="(fw:PointerTracker.RootObject)"
                                     RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Rectangle}}" />
                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Rectangle}}" />
                            <Binding Path="(fw:PointerTracker.Position)"
                                     RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Rectangle}}" />
                          </MultiBinding>
                        </RadialGradientBrush.Center>
                        <RadialGradientBrush.GradientOrigin>
                          <MultiBinding UpdateSourceTrigger="Default">
                            <MultiBinding.Converter>
                              <fw:RelativePositionConverter />
                            </MultiBinding.Converter>
                            <Binding Path="(fw:PointerTracker.RootObject)"
                                     RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Rectangle}}" />
                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Rectangle}}" />
                            <Binding Path="(fw:PointerTracker.Position)"
                                     RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Rectangle}}" />
                          </MultiBinding>
                        </RadialGradientBrush.GradientOrigin>
                        <GradientStop Color="Transparent"
                                      Offset="0" />
                        <GradientStop Color="#88FFFFFF"
                                      Offset="0.5" />
                        <GradientStop Color="Transparent"
                                      Offset="1" />
                      </RadialGradientBrush>
                    </Rectangle.Fill>
                  </Rectangle>
                </Grid>
              </Border>
              <Border BorderBrush="{x:Null}"
                      BorderThickness="{TemplateBinding BorderThickness}">
                <ContentPresenter x:Name="contentPresenter"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                  Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              </Border>
              <Border x:Name="border"
                      BorderThickness="{TemplateBinding BorderThickness}">
                <Border.BorderBrush>
                  <RadialGradientBrush MappingMode="Absolute"
                                       RadiusY="120"
                                       RadiusX="120">
                    <RadialGradientBrush.Center>
                      <MultiBinding UpdateSourceTrigger="Default">
                        <MultiBinding.Converter>
                          <fw:RelativePositionConverter />
                        </MultiBinding.Converter>
                        <Binding Path="(fw:PointerTracker.RootObject)" />
                        <Binding />
                        <Binding Path="(fw:PointerTracker.Position)" />
                      </MultiBinding>
                    </RadialGradientBrush.Center>
                    <RadialGradientBrush.GradientOrigin>
                      <MultiBinding UpdateSourceTrigger="Default">
                        <MultiBinding.Converter>
                          <fw:RelativePositionConverter />
                        </MultiBinding.Converter>
                        <Binding Path="(fw:PointerTracker.RootObject)" />
                        <Binding />
                        <Binding Path="(fw:PointerTracker.Position)" />
                      </MultiBinding>
                    </RadialGradientBrush.GradientOrigin>
                    <RadialGradientBrush.Opacity>
                      <Binding Path="(fw:PointerTracker.IsEnter)">
                        <Binding.ConverterParameter>
                          <System:Double>0.3</System:Double>
                        </Binding.ConverterParameter>
                        <Binding.Converter>
                          <fw:OpacityConverter />
                        </Binding.Converter>
                      </Binding>
                    </RadialGradientBrush.Opacity>
                    <GradientStop Color="White"
                                  Offset="0" />
                    <GradientStop Color="Transparent"
                                  Offset="1" />
                  </RadialGradientBrush>
                </Border.BorderBrush>
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver"
                       Value="True">
                <Setter Property="Background"
                        TargetName="root"
                        Value="#BB808080" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </fcc:FluentWindow.Resources>
  <fcc:FluentWindow.Template>
    <ControlTemplate TargetType="{x:Type fcc:FluentWindow}">
      <Border x:Name="WindowBorder"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
        <Grid x:Name="LayoutRoot"
              Background="Transparent">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <Grid x:Name="PART_WindowTitleGrid"
                Grid.Row="0"
                fw:PointerTracker.Enabled="True"
                Height="26.4">
            <Grid.ColumnDefinitions>
              <!--icon-->
              <ColumnDefinition Width="Auto" />
              <!--title-->
              <ColumnDefinition Width="*" />
              <!--minimize-->
              <ColumnDefinition Width="Auto" />
              <!--maximize-->
              <ColumnDefinition Width="Auto" />
              <!--close-->
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button x:Name="IconButton"
                    Content="{TemplateBinding Icon}"
                    VerticalAlignment="Center"
                    Margin="7,0,5,0"
                    Height="{x:Static SystemParameters.SmallIconHeight}"
                    Width="{x:Static SystemParameters.SmallIconWidth}"
                    WindowChrome.IsHitTestVisibleInChrome="True"
                    IsTabStop="False">
              <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                  <Image Source="{TemplateBinding Content}" />
                </ControlTemplate>
              </Button.Template>
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                  <i:InvokeCommandAction Command="{x:Static SystemCommands.ShowSystemMenuCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseDoubleClick">
                  <i:InvokeCommandAction Command="{x:Static SystemCommands.CloseWindowCommand}" />
                </i:EventTrigger>
              </i:Interaction.Triggers>
            </Button>
            <ContentControl x:Name="TitleControl"
                            Grid.Column="1"
                            IsTabStop="False"
                            Foreground="White"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSize}}"
                            Content="{TemplateBinding Title}" />
            <Button x:Name="MinimizeButton"
                    Grid.Column="2"
                    ToolTip="Minimize"
                    WindowChrome.IsHitTestVisibleInChrome="True"
                    Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}"
                    ContentTemplate="{StaticResource MinimizeWhite}"
                    Style="{StaticResource TitleBarButtonStyle}"
                    IsTabStop="False" />
            <Button x:Name="RestoreButton"
                    Grid.Column="3"
                    ToolTip="Restore"
                    WindowChrome.IsHitTestVisibleInChrome="True"
                    Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}"
                    ContentTemplate="{StaticResource RestoreWhite}"
                    Style="{StaticResource TitleBarButtonStyle}"
                    Visibility="Collapsed"
                    IsTabStop="False" />
            <Button x:Name="MaximizeButton"
                    Grid.Column="3"
                    ToolTip="Maximize"
                    WindowChrome.IsHitTestVisibleInChrome="True"
                    Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}"
                    ContentTemplate="{StaticResource MaximizeWhite}"
                    Style="{StaticResource TitleBarButtonStyle}"
                    IsTabStop="False" />
            <Button x:Name="CloseButton"
                    Grid.Column="4"
                    ToolTip="Close"
                    WindowChrome.IsHitTestVisibleInChrome="True"
                    Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}"
                    ContentTemplate="{StaticResource CloseWhite}"
                    Style="{StaticResource TitleBarButtonStyle}"
                    IsTabStop="False" />
            <Button x:Name="BorderButton"
                    Grid.ColumnSpan="5"
                    Width="600"
                    Style="{StaticResource TitleBarButtonStyle}"
                    IsTabStop="False" />

            <Grid x:Name="WindowCommandButtonsStackPanel"
                  Grid.Column="2"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Stretch"
                  Background="Transparent"
                  WindowChrome.IsHitTestVisibleInChrome="True"
                  fw:PointerTracker.Enabled="True"
                  Margin="0,-1,-1,0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

            </Grid>
          </Grid>
          <AdornerDecorator Grid.Row="1"
                            KeyboardNavigation.IsTabStop="False">
            <ContentPresenter x:Name="MainContentPresenter"
                              KeyboardNavigation.TabNavigation="Cycle" />
          </AdornerDecorator>
          <ResizeGrip x:Name="ResizeGrip"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Bottom"
                      Grid.Row="1"
                      IsTabStop="False"
                      Visibility="Hidden"
                      WindowChrome.ResizeGripDirection="BottomRight" />
        </Grid>
      </Border>
      <ControlTemplate.Triggers>
        <Trigger Property="IsActive"
                 Value="False">
          <Setter Property="BorderBrush"
                  Value="#FF6F7785" />
        </Trigger>
        <Trigger Property="WindowState"
                 Value="Maximized">
          <Setter TargetName="MaximizeButton"
                  Property="Visibility"
                  Value="Collapsed" />
          <Setter TargetName="RestoreButton"
                  Property="Visibility"
                  Value="Visible" />
          <Setter TargetName="LayoutRoot"
                  Property="Margin"
                  Value="7" />
        </Trigger>
        <Trigger Property="WindowState"
                 Value="Normal">
          <Setter TargetName="MaximizeButton"
                  Property="Visibility"
                  Value="Visible" />
          <Setter TargetName="RestoreButton"
                  Property="Visibility"
                  Value="Collapsed" />
        </Trigger>
        <Trigger Property="ResizeMode"
                 Value="NoResize">
          <Setter TargetName="MinimizeButton"
                  Property="Visibility"
                  Value="Collapsed" />
          <Setter TargetName="MaximizeButton"
                  Property="Visibility"
                  Value="Collapsed" />
          <Setter TargetName="RestoreButton"
                  Property="Visibility"
                  Value="Collapsed" />
        </Trigger>

        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ResizeMode"
                       Value="CanResizeWithGrip" />
            <Condition Property="WindowState"
                       Value="Normal" />
          </MultiTrigger.Conditions>
          <Setter TargetName="ResizeGrip"
                  Property="Visibility"
                  Value="Visible" />
        </MultiTrigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
  </fcc:FluentWindow.Template>

  <StackPanel fw:PointerTracker.Enabled="True">
    <Button Content="aaa"
            Style="{DynamicResource ButtonStyle1}" />
    <Button Content="aaa"
            Style="{StaticResource ButtonRevealStyle}" />
    <Button Content="aaa"
            Style="{StaticResource ButtonRevealStyle}" />
    <Button Content="aaa"
            Style="{StaticResource ButtonRevealStyle}" />
  </StackPanel>
</fcc:FluentWindow>
