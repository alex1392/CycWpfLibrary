<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CycWpfLibrary.FluentCustomControls"
                    xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
  <ResourceDictionary.MergedDictionaries>
    <!--  FluentWPF Controls  -->
    <ResourceDictionary Source="pack://application:,,,/FluentWPF;component/Styles/Controls.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <DataTemplate x:Key="RestoreWhite">
    <Grid UseLayoutRounding="True">
      <Path Data="M1,3 L1,11 L9,11 L9,3 z M3,1 L3,2 L10,2 L10,9 L11,9 L11,1 z M2 ,0 L12,0 L12,10 L10,10 L10,12 L0,12 L0,2 L2 ,2 z"
            Width="12"
            Height="12"
            UseLayoutRounding="True"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Fill="White" />
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="CloseWhite">
    <Grid UseLayoutRounding="True">
      <Path Data="M1,0 L6,5 L11,0 L12,1 L7,6 L12,11 L11,12 L6,7 L1,12 L0,11 L5,6 L0,1 z"
            Width="12"
            Height="12"
            UseLayoutRounding="True"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Fill="White" />
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="MaximizeWhite">
    <Grid>
      <Path Data="M1,1  L1 ,11 L11,11 L11,1 z M0,0 L12,0 L12,12 L0,12 z"
            Width="12"
            Height="12"
            UseLayoutRounding="True"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Fill="White" />
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="MinimizeWhite">
    <Grid>
      <Path Data="M0,5 L12,5 L12,6 L0,6 z"
            Width="12"
            Height="12"
            UseLayoutRounding="True"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            Fill="White" />
    </Grid>
  </DataTemplate>

  <Style x:Key="TitleBarButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2"
                     SnapsToDevicePixels="True"
                     Stroke="Transparent"
                     StrokeDashArray="1 2"
                     StrokeThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TitleBarButtonStyle"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource ButtonRevealStyle}">
    <Setter Property="Focusable"
            Value="False" />
    <Setter Property="Background"
            Value="#66FFFFFF" />
    <Setter Property="Width"
            Value="36" />
    <Setter Property="HorizontalContentAlignment"
            Value="Center" />
    <Setter Property="VerticalContentAlignment"
            Value="Center" />
  </Style>

  <Style TargetType="{x:Type local:FluentWindow}">
    <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    <Setter Property="Background"
            Value="#FFF1F1F1" />
    <Setter Property="BorderBrush"
            Value="#FF0874AA" />
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="IsTabStop"
            Value="False" />
    <Setter Property="ResizeMode"
            Value="CanResizeWithGrip" />
    <Setter Property="UseLayoutRounding"
            Value="True" />
    <Setter Property="TextOptions.TextFormattingMode"
            Value="Display" />
    <Setter Property="WindowStyle"
            Value="SingleBorderWindow" />
    <Setter Property="FontFamily"
            Value="Segoe UI" />
    <Setter Property="WindowChrome.WindowChrome">
      <Setter.Value>
        <WindowChrome CornerRadius="0"
                      GlassFrameThickness="1"
                      UseAeroCaptionButtons="False"
                      NonClientFrameEdges="None" />
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:FluentWindow}">
          <Border x:Name="WindowBorder"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="LayoutRoot"
                  Background="{TemplateBinding Background}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>

              <Grid x:Name="PART_WindowTitleGrid"
                    Grid.Row="0"
                    Height="26.4"
                    Background="{TemplateBinding BorderBrush}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                  <Button x:Name="IconButton"
                          Content="{TemplateBinding Icon}"
                          VerticalAlignment="Center"
                          Margin="7,0,5,0"
                          Height="{x:Static SystemParameters.SmallIconHeight}"
                          Width="{x:Static SystemParameters.SmallIconWidth}"
                          WindowChrome.IsHitTestVisibleInChrome="True"
                          IsTabStop="False">
                    <Button.Template>
                      <ControlTemplate TargetType="{x:Type Button}">
                        <Image Source="{TemplateBinding Content}" />
                      </ControlTemplate>
                    </Button.Template>
                    <i:Interaction.Triggers>
                      <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{x:Static SystemCommands.ShowSystemMenuCommand}" />
                      </i:EventTrigger>
                      <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{x:Static SystemCommands.CloseWindowCommand}" />
                      </i:EventTrigger>
                    </i:Interaction.Triggers>
                  </Button>
                  <ContentControl x:Name="TitleControl"
                                  IsTabStop="False"
                                  Foreground="White"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSize}}"
                                  Content="{TemplateBinding Title}" />
                </StackPanel>
                <Grid x:Name="WindowCommandButtonsStackPanel"
                      Grid.Column="1"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Stretch"
                      Background="Transparent"
                      WindowChrome.IsHitTestVisibleInChrome="True"
                      fw:PointerTracker.Enabled="True"
                      Margin="0,-1,-1,0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Button x:Name="MinimizeButton"
                          ToolTip="Minimize"
                          WindowChrome.IsHitTestVisibleInChrome="True"
                          Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}"
                          ContentTemplate="{StaticResource MinimizeWhite}"
                          Style="{StaticResource TitleBarButtonStyle}"
                          IsTabStop="False" />
                  <Button x:Name="RestoreButton"
                          Grid.Column="1"
                          ToolTip="Restore"
                          WindowChrome.IsHitTestVisibleInChrome="True"
                          Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}"
                          ContentTemplate="{StaticResource RestoreWhite}"
                          Style="{StaticResource TitleBarButtonStyle}"
                          Visibility="Collapsed"
                          IsTabStop="False" />
                  <Button x:Name="MaximizeButton"
                          Grid.Column="1"
                          ToolTip="Maximize"
                          WindowChrome.IsHitTestVisibleInChrome="True"
                          Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}"
                          ContentTemplate="{StaticResource MaximizeWhite}"
                          Style="{StaticResource TitleBarButtonStyle}"
                          IsTabStop="False" />
                  <Button x:Name="CloseButton"
                          Grid.Column="2"
                          ToolTip="Close"
                          WindowChrome.IsHitTestVisibleInChrome="True"
                          Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}"
                          ContentTemplate="{StaticResource CloseWhite}"
                          Style="{StaticResource TitleBarButtonStyle}"
                          IsTabStop="False" />
                </Grid>
              </Grid>
              <AdornerDecorator Grid.Row="1"
                                KeyboardNavigation.IsTabStop="False">
                <ContentPresenter x:Name="MainContentPresenter"
                                  KeyboardNavigation.TabNavigation="Cycle" />
              </AdornerDecorator>
              <ResizeGrip x:Name="ResizeGrip"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Bottom"
                          Grid.Row="1"
                          IsTabStop="False"
                          Visibility="Hidden"
                          WindowChrome.ResizeGripDirection="BottomRight" />
            </Grid>
          </Border>


          <ControlTemplate.Triggers>
            <Trigger Property="IsActive"
                     Value="False">
              <Setter Property="BorderBrush"
                      Value="#FF6F7785" />
            </Trigger>
            <Trigger Property="WindowState"
                     Value="Maximized">
              <Setter TargetName="MaximizeButton"
                      Property="Visibility"
                      Value="Collapsed" />
              <Setter TargetName="RestoreButton"
                      Property="Visibility"
                      Value="Visible" />
              <Setter TargetName="LayoutRoot"
                      Property="Margin"
                      Value="7" />
            </Trigger>
            <Trigger Property="WindowState"
                     Value="Normal">
              <Setter TargetName="MaximizeButton"
                      Property="Visibility"
                      Value="Visible" />
              <Setter TargetName="RestoreButton"
                      Property="Visibility"
                      Value="Collapsed" />
            </Trigger>
            <Trigger Property="ResizeMode"
                     Value="NoResize">
              <Setter TargetName="MinimizeButton"
                      Property="Visibility"
                      Value="Collapsed" />
              <Setter TargetName="MaximizeButton"
                      Property="Visibility"
                      Value="Collapsed" />
              <Setter TargetName="RestoreButton"
                      Property="Visibility"
                      Value="Collapsed" />
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ResizeMode"
                           Value="CanResizeWithGrip" />
                <Condition Property="WindowState"
                           Value="Normal" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ResizeGrip"
                      Property="Visibility"
                      Value="Visible" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
